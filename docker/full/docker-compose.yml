version: '3.1'

services:
  pal-backend-service:
    image: dachertanov/pal-backend-service:latest
    restart: unless-stopped
    links:
      - kafka
      - db
      - minio
      - minio-client
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
      MINIO_CONNECTION_URL: http://minio:9000
      MINIO_ACCESS_KEY: minio_access_key
      MINIO_SECRET_KEY: minio_secret_key
    ports:
      - 8081:8081
    depends_on:
      - db
      - kafka
      - minio
    volumes:
      - /var/log/pal/logs/:/app/logs/

  pal-recommendation-service:
    image: dachertanov/pal-recommendation-service:latest
    restart: unless-stopped
    links:
      - kafka
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
    ports:
      - 8082:8082
    depends_on:
      - db
      - kafka
    volumes:
      - /var/log/pal/logs/:/app/logs/

  pal-frontend:
    image: dachertanov/pal-frontend:latest
    ports:
      - 3001:3000

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    volumes:
      - ./data/minio:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ACCESS_KEY: minio_access_key
      MINIO_SECRET_KEY: minio_secret_key
      MINIO_ROOT_USER: minio_user
      MINIO_ROOT_PASSWORD: minio_password
    entrypoint: sh
    command: -c 'mkdir -p /data/images-bucket && minio server /data --console-address ":9001"'

  minio-client:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc config host add minio http://minio:9000 minio_user minio_password;
      /usr/bin/mc policy set download minio/images-bucket/public;
      /usr/bin/mc admin user add minio minio_access_key minio_secret_key;
      /usr/bin/mc admin policy set minio readwrite user=minio_access_key;
      exit 0;
      "

  zookeeper:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka
    ports:
      - 9092:9092
      - 9093:9093
    volumes:
      - /etc/kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=INSIDE://:9092,OUTSIDE://:9093
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CREATE_TOPICS=PAL.Messages:3:1
    depends_on:
      - zookeeper