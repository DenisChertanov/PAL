spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/postgres}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
  kafka:
    consumer:
      group-id: fm-driver-backend
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: dachertanov.pal.backendservice.kafka.recommendation
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    bootstrap-servers: localhost:9092
  main:
    allow-circular-references: true # Убрать когда springdoc-openapi-ui выкатят версию без бага
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher # Для сваггера

server:
  port: 8081

s3:
  connection-url: ${MINIO_CONNECTION_URL:http://localhost:9000}
  object-url: ${MINIO_OBJECT_URL:http://localhost:9000}
  bucket: ${S3_BUCKET:images-bucket}
  public-folder: ${S3_PUBLIC_FOLDER:public}
  access-key: ${MINIO_ACCESS_KEY:minio_access_key}
  secret-key: ${MINIO_SECRET_KEY:minio_secret_key}

pal:
  security:
    jwt:
      secret: ${JWT_SECRET:'123456'}
      expiration: ${JWT_EXPIRATION:300d}
    pbkdf:
      secret-key: ${PBKDF_SECRET_KEY:secret_key}
      iterations: ${PBKDF_ITERATIONS:200000}
      hash-width: ${PBKDF_HASH_WIDTH:256}
    admin-id: a8ade8dc-6d11-4175-8f69-8b65457e577d

kafka:
  topics:
    pal-backend-messages:
      name: PAL.Messages
      numPartitions: ${NUM_PARTITIONS:3}
      replicationFactor: ${REPLICATION_FACTOR:1}
